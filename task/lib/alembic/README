
TASK MANAGEMENT SYSTEM

OVERVIEW
    The Task Management System is a Python application designed to manage departments, employees, projects, and tasks within an organization. It uses SQLAlchemy for database interactions and provides a command-line interface for user interaction.

FEATURES
    .Department Management: Create, delete, and view departments.
    .Employee Management: Create, delete, and view employees, including their association with departments.
    .Project Management: Create, delete, and view    projects, including their association with employees.
    .Task Management: Create, delete, and view tasks, including their association with employees and projects.

SETUP
Prerequisites
    .Python 3.x
    .SQLAlchemy
    .SQLite
    .Installation
  
USAGE
Main Menu
    .The main menu provides options to navigate through different sections of the application:

    (1)Departments: Manage departments.
    (2)Employees: Manage employees.
    (3)Projects: Manage projects.
    (4)Tasks: Manage tasks.
    (5)Exit: Exit the application.

    DEPARTMENT Menu
    (1)Create Department: Add a new department.
    (2)Delete Department: Remove an existing department by ID.
    (3)Display All Departments: View all departments.
    (4)Find Department by ID: Search for a department by its ID.
    (5)Back to Main Menu: Return to the main menu.

    EMPLOYEEE Menu
    (1)Create Employee: Add a new employee.
    (2)Delete Employee: Remove an existing employee by ID.
    (3)Display All Employees: View all employees.
    (4)Find Employee by ID: Search for an employee by their ID.
    (5) Back to Main Menu: Return to the main menu.

    PROJECT Menu
    (1)Create Project: Add a new project.
    (2)Delete Project: Remove an existing project by ID.
   (3) Display All Projects: View all projects.
   (4) Find Project by ID: Search for a project by its ID.
   (5) Back to Main Menu: Return to the main menu.

    TASK Menu
    (1)Create Task: Add a new task.
    (2)Delete Task: Remove an existing task by ID.
    (3)Display All Tasks: View all tasks.
    (4)Find Task by ID: Search for a task by its ID.
    (5)Back to Main Menu: Return to the main menu.

    DATABASE SCHEMA
    (1)Tables

    .Departments: Stores department information.
    .Employees: Stores employee information and their associated department.
    .Projects: Stores project information and their associated employees.
    .Tasks: Stores task information and their associated employee and project.

    RELATIONSHIPS
    .Employee-Project: Many-to-many relationship managed through an association table.
    .Employee-Department: One-to-many relationship.
    .Project-Task: One-to-many relationship.
    .Employee-Task: One-to-many relationship.

    EXAMPLE OF DATA
    .The script create_database.py includes example data for departments, employees, projects, and tasks. This data is used to populate the database when it is first created.

    CONTRIBUTION
    .Contributions are welcome! Please open an issue or submit a pull request.
    
    CONTACT
    For any questions or support, please contact  me brian.o.iraru@gmail.com.